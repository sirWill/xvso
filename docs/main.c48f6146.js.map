{"version":3,"sources":["src/js/Game.js","src/js/main.js"],"names":["Game","settings","field","fieldSize","cellSize","winnerLength","fieldElement","document","getElementById","currentPlayerEl","sizeSettingsEl","querySelector","winnerSettingsEl","current","steps","stats","X","O","showStats","one","el","innerHTML","makeStep","e","button","target","i","getAttribute","j","setAttribute","classList","add","toLowerCase","checkVictory","row","column","DIFFERENCE","dx","dy","tx","ty","parseInt","Y","directions","NW","sum","N","NE","E","SE","S","SW","W","t","opposites","alert","gameWon","children","window","localStorage","setItem","JSON","stringify","makeField","clearField","push","Array","style","width","height","length","createElement","fontSize","addEventListener","append","resetGame","resetStat","settingsListener","value","isNaN","init","stat","getItem","parse"],"mappings":"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","file":"main.c48f6146.js","sourceRoot":"..","sourcesContent":["/**\n * \"Класс\" игры\n */\nfunction Game() {\n  // Константы с параметрами игры\n  let settings = {\n    /** Размер поля */\n    fieldSize: 10,\n    /** Размер клетки поля в px */\n    cellSize: 50,\n    /** Длина выигрышной последовательности */\n    winnerLength: 5\n  };\n\n  let fieldElement = document.getElementById(\"field\"),\n    currentPlayerEl = document.getElementById(\"currentPlayer\"),\n    sizeSettingsEl = document.querySelector('input[name=\"size\"]'),\n    winnerSettingsEl = document.querySelector('input[name=\"winner\"]');\n\n  /** Массив с массивами для хранения поля */\n  let field;\n  /** Текущий игрок */\n  let current = \"X\";\n  /** Счетчик ходов в игре */\n  let steps = 0;\n\n  /** Объект для хранения статистики */\n  let stats = {\n    X: 0,\n    O: 0\n  };\n\n  /**\n   * Очистка всего поля и инициализация всех клеток поля нулями\n   */\n  function clearField() {\n    field = [];\n    for (let i = 0; i < settings.fieldSize; i++) {\n      field.push(new Array());\n      for (let j = 0; j < settings.fieldSize; j++) {\n        field[i].push(0);\n      }\n    }\n  }\n\n  /**\n   * Вывод статистики игр\n   */\n  function showStats() {\n    let elementPrefix = \"winner\";\n    for (let one in stats) {\n      let el = document.getElementById(elementPrefix + one);\n      if (el) {\n        el.innerHTML = stats[one];\n      }\n    }\n  }\n\n  /**\n   * Функция для расчета хода\n   *\n   * @param {MouseEvent} e\n   */\n  function makeStep(e) {\n    // Делаем ход\n    let button = e.target;\n    let i = button.getAttribute(\"row\"),\n      j = button.getAttribute(\"col\");\n    field[i][j] = current;\n    button.innerHTML = current;\n    button.setAttribute(\"disabled\", true);\n    button.classList.add(\"-\" + current.toLowerCase());\n    steps++;\n    // Проверяем выигрыш, если он возможен\n    if (steps >= settings.winnerLength * 2 - 1) {\n      if (checkVictory(i, j)) {\n        return;\n      }\n      // Ничья?\n      if (steps === settings.fieldSize * settings.fieldSize) {\n        alert(\"Ничья!\");\n      }\n    }\n    // Смена игрока\n    if (current === \"X\") {\n      current = \"O\";\n    } else {\n      current = \"X\";\n    }\n    currentPlayerEl.innerHTML = current;\n  }\n\n  /**\n   * Что происходит при завершении игры\n   */\n  function gameWon() {\n    // Обойти и заблокировать все клетки поля\n    for (let i in field) {\n      for (let j in field) {\n        i = parseInt(i);\n        j = parseInt(j);\n        if (field[i][j] === 0) {\n          fieldElement.children[i * settings.fieldSize + j].setAttribute(\n            \"disabled\",\n            true\n          );\n        }\n      }\n    }\n    // Добавить данные в статистику побед\n    stats[current]++;\n    window.localStorage.setItem(\"stats\", JSON.stringify(stats));\n    showStats();\n  }\n\n  /**\n   * Функция для проверки победы в игре\n   *\n   * @param {*} row\n   * @param {*} column\n   */\n  function checkVictory(row, column) {\n    const DIFFERENCE = settings.winnerLength - 1;\n    const X = parseInt(row),\n      Y = parseInt(column);\n    // Вокруг ячейки, где был совершен ход\n    // Объект со смещениями по направлениям\n    let directions = {\n      NW: {\n        dx: -1,\n        dy: -1,\n        sum: 0\n      },\n      N: {\n        dx: 0,\n        dy: -1,\n        sum: 0\n      },\n      NE: {\n        dx: 1,\n        dy: -1,\n        sum: 0\n      },\n      E: {\n        dx: 1,\n        dy: 0,\n        sum: 0\n      },\n      SE: {\n        dx: 1,\n        dy: 1,\n        sum: 0\n      },\n      S: {\n        dx: 0,\n        dy: 1,\n        sum: 0\n      },\n      SW: {\n        dx: -1,\n        dy: 1,\n        sum: 0\n      },\n      W: {\n        dx: -1,\n        dy: 0,\n        sum: 0\n      }\n    };\n    let dx, dy, tx, ty;\n    for (let one in directions) {\n      dx = directions[one].dx;\n      dy = directions[one].dy;\n      for (let t = 1; t <= DIFFERENCE; t++) {\n        tx = X + dx * t;\n        ty = Y + dy * t;\n        if (\n          tx < 0 ||\n          tx >= settings.fieldSize ||\n          ty < 0 ||\n          ty >= settings.fieldSize\n        )\n          break;\n        if (field[tx][ty] === field[X][Y]) {\n          directions[one].sum++;\n        } else {\n          break;\n        }\n      }\n    }\n    // Противоположные направления\n    let opposites = [\n      [\"NW\", \"SE\"],\n      [\"N\", \"S\"],\n      [\"NE\", \"SW\"],\n      [\"E\", \"W\"]\n    ];\n    for (let one of opposites) {\n      if (directions[one[0]].sum + directions[one[1]].sum >= DIFFERENCE) {\n        // Есть победитель!\n        alert(\"Вы победили! Поздравляем \" + current + \" с победой!\");\n        gameWon();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Отрисовка чистого игрового поля\n   */\n  function makeField() {\n    let i, j;\n    clearField();\n    fieldElement.innerHTML = \"\";\n    fieldElement.style.width = fieldElement.style.height =\n      settings.fieldSize * settings.cellSize + \"px\";\n\n    for (i = 0; i < field.length; i++) {\n      for (j = 0; j < field[i].length; j++) {\n        let button = document.createElement(\"button\");\n        button.setAttribute(\"row\", i);\n        button.setAttribute(\"col\", j);\n        button.style.width = settings.cellSize + \"px\";\n        button.style.height = settings.cellSize + \"px\";\n        button.style.fontSize = settings.cellSize * 0.8 + \"px\";\n        button.addEventListener(\"click\", makeStep);\n        fieldElement.append(button);\n      }\n    }\n  }\n\n  /**\n   * перезапуск игры\n   */\n  function resetGame() {\n    steps = 0;\n    current = \"X\";\n    currentPlayerEl.innerHTML = current;\n    makeField();\n  }\n\n  /**\n   * Сброс статистики игр\n   */\n  function resetStat() {\n    stats = {\n      X: 0,\n      O: 0\n    };\n    window.localStorage.setItem(\"stats\", JSON.stringify(stats));\n    showStats();\n  }\n\n  /**\n   * Отслеживаем изменение параметров\n   *\n   * @param {Event} e\n   */\n  function settingsListener(e) {\n    let fieldSize = parseInt(sizeSettingsEl.value);\n    let winnerLength = parseInt(winnerSettingsEl.value);\n    if (fieldSize > 150) {\n      fieldSize = 150;\n    } else if (fieldSize < 3) {\n      fieldSize = 3;\n    } else if (isNaN(fieldSize)) {\n      fieldSize = 10;\n    }\n    if (winnerLength > 5) {\n      winnerLength = 5;\n    } else if (winnerLength < 3) {\n      winnerLength = 3;\n    } else if (isNaN(winnerLength)) {\n      winnerLength = 5;\n    }\n    if (fieldSize < winnerLength) {\n      fieldSize = winnerLength;\n    }\n    sizeSettingsEl.value = fieldSize;\n    winnerSettingsEl.value = winnerLength;\n    settings.fieldSize = fieldSize;\n    settings.winnerLength = winnerLength;\n  }\n\n  function init() {\n    // Устанавливаем прослушивателей событий\n    document.getElementById(\"newGame\").addEventListener(\"click\", resetGame);\n    document.getElementById(\"resetStat\").addEventListener(\"click\", resetStat);\n\n    sizeSettingsEl.addEventListener(\"change\", settingsListener);\n    winnerSettingsEl.addEventListener(\"change\", settingsListener);\n    sizeSettingsEl.addEventListener(\"blur\", settingsListener);\n    winnerSettingsEl.addEventListener(\"blur\", settingsListener);\n\n    // Загружаем текущую статистику\n    let stat = window.localStorage.getItem(\"stats\");\n    if (typeof stat === \"string\") {\n      stats = JSON.parse(stat);\n    }\n    showStats();\n\n    // Стартуем игру\n    resetGame();\n  }\n\n  // Инициализируем игру\n  init();\n}\n\nexport default Game;\n","// Подключаем файл с описанием игры\nimport Game from \"./Game\";\n\n// Запускаем игру\nnew Game();\n"]}